
import os
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    filters,
    ConversationHandler,
    ContextTypes,
)
import logging

# Enable logging
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)

# Define states
NAME, PHONE, EXPERIENCE, TOOL, CAR, CITIZEN, HABITS, PHOTO, READY = range(9)

admin_chat_id = -4769038698  # –ö—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∞–Ω–∫–µ—Ç—ã

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[KeyboardButton("üöÄ –ü–æ–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É")]]
    markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text(
        """üë∑‚Äç‚ôÇÔ∏è –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º!

–ù–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–µ–º–æ–Ω—Ç—ã —Å–∞–Ω—É–∑–ª–æ–≤ *–ø–æ–¥ –∫–ª—é—á* –≤ –¢—é–º–µ–Ω–∏ –ø–æ –∑–∞–∫–∞–∑–∞–º –æ—Ç –õ–µ–º–∞–Ω–∞ –ü—Ä–æ (–õ–µ—Ä—É–∞ –ú–µ—Ä–ª–µ–Ω).
–°–µ–π—á–∞—Å –º—ã –Ω–∞–±–∏—Ä–∞–µ–º –æ–ø—ã—Ç–Ω—ã—Ö –ø–ª–∏—Ç–æ—á–Ω–∏–∫–æ–≤ –∏ –º–∞—Å—Ç–µ—Ä–æ–≤ –æ—Ç–¥–µ–ª–∫–∏.

üìã *–ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ —Ä–∞–±–æ—Ç—ã:*
‚Ä¢ –£–∫–ª–∞–¥–∫–∞ –ø–ª–∏—Ç–∫–∏
‚Ä¢ –î–µ–º–æ–Ω—Ç–∞–∂
‚Ä¢ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å—Ç–µ–Ω –∏ –ø–æ–ª–æ–≤
‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∏
‚Ä¢ –ì–∏–¥—Ä–æ–∏–∑–æ–ª—è—Ü–∏—è, —ç–ª–µ–∫—Ç—Ä–∏–∫–∞, –≥–µ—Ä–º–µ—Ç–∏–∑–∞—Ü–∏—è

üí∞ *–û–ø–ª–∞—Ç–∞:*
‚Ä¢ –ü–ª–∏—Ç–∫–∞ ‚Äî ~1600 ‚ÇΩ/–º¬≤
‚Ä¢ –û—Ç–¥–µ–ª—å–Ω–æ –æ–ø–ª–∞—á–∏–≤–∞—é—Ç—Å—è: –¥–µ–º–æ–Ω—Ç–∞–∂, –∑–∞—Ç–∏—Ä–∫–∞, –ø–æ—Ä–æ–∂–∫–∏, —Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∞ –∏ –¥—Ä.
‚Ä¢ –ê–≤–∞–Ω—Å 20% ‚Äî –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç
‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–π –ø–ª–∞—Ç—ë–∂ ‚Äî –≤ –¥–µ–Ω—å –≤—ã–ø–ª–∞—Ç –æ—Ç –õ–µ–º–∞–Ω–∞ –ü—Ä–æ
‚Ä¢ –î–æ—Ö–æ–¥ –æ—Ç 120 000 ‚ÇΩ/–º–µ—Å

üì¶ *–£—Å–ª–æ–≤–∏—è:*
‚Ä¢ –†–∞–±–æ—Ç–∞ –ø–æ –¥–æ–≥–æ–≤–æ—Ä—É
‚Ä¢ –°–ø–µ—Ü–æ–¥–µ–∂–¥–∞ ‚Äî –≤—ã–¥–∞—ë—Ç—Å—è
‚Ä¢ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç ‚Äî –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ —Å–≤–æ–π (–º–æ–∂–µ–º –¥–æ—É–∫–æ–º–ø–ª–µ–∫—Ç–æ–≤–∞—Ç—å)
‚Ä¢ –°—Ç–∞–±–∏–ª—å–Ω—ã–µ –∑–∞–∫–∞–∑—ã –ø–æ –¢—é–º–µ–Ω–∏ –∏ –ø—Ä–∏–≥–æ—Ä–æ–¥–∞–º

üëá –ï—Å–ª–∏ –≤—Å—ë —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç ‚Äî –∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –ø–æ–¥–∞–π –∞–Ω–∫–µ—Ç—É. –≠—Ç–æ –∑–∞–π–º—ë—Ç –Ω–µ –±–æ–ª—å—à–µ 2 –º–∏–Ω—É—Ç.""",
        reply_markup=markup,
    )
    return NAME

async def begin_form(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?", reply_markup=ReplyKeyboardRemove())
    return PHONE

async def get_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["name"] = update.message.text
    await update.message.reply_text("–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞?")
    return EXPERIENCE

async def get_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["phone"] = update.message.text
    await update.message.reply_text("–°–∫–æ–ª—å–∫–æ –ª–µ—Ç —É–∫–ª–∞–¥—ã–≤–∞–µ—Ç–µ –ø–ª–∏—Ç–∫—É?")
    return TOOL

async def get_experience(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["experience"] = update.message.text
    await update.message.reply_text("–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç? (–î–∞/–ù–µ—Ç)")
    return CAR

async def get_tool(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["tool"] = update.message.text
    await update.message.reply_text("–ï—Å—Ç—å –ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å? (–î–∞/–ù–µ—Ç)")
    return CITIZEN

async def get_car(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["car"] = update.message.text
    await update.message.reply_text("–ï—Å—Ç—å –ª–∏ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ –†–§? (–î–∞/–ù–µ—Ç)")
    return HABITS

async def get_citizen(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["citizen"] = update.message.text
    await update.message.reply_text("–ï—Å—Ç—å –ª–∏ –≤—Ä–µ–¥–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏? (–∫—É—Ä–µ–Ω–∏–µ, –∞–ª–∫–æ–≥–æ–ª—å, –æ–ø–æ–∑–¥–∞–Ω–∏—è –∏ —Ç.–¥.)")
    return PHOTO

async def get_habits(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["habits"] = update.message.text
    await update.message.reply_text("–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ 1‚Äì2 —Ñ–æ—Ç–æ –≤–∞—à–∏—Ö —Ä–∞–±–æ—Ç:")
    return READY

async def get_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["photo"] = update.message.photo[-1].file_id if update.message.photo else "–Ω–µ—Ç —Ñ–æ—Ç–æ"
    await update.message.reply_text("–ö–æ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –≤—ã–π—Ç–∏ –Ω–∞ –ø–µ—Ä–≤—ã–π –æ–±—ä–µ–∫—Ç?")
    return READY

async def final_step(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["ready"] = update.message.text

    user_info = (
        f"üë§ –ò–º—è: {context.user_data.get('name')}
"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {context.user_data.get('phone')}
"
        f"üõ†Ô∏è –û–ø—ã—Ç: {context.user_data.get('experience')}
"
        f"üîß –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç: {context.user_data.get('tool')}
"
        f"üöó –ê–≤—Ç–æ: {context.user_data.get('car')}
"
        f"üá∑üá∫ –ì—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ –†–§: {context.user_data.get('citizen')}
"
        f"üí≠ –í—Ä–µ–¥–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏: {context.user_data.get('habits')}
"
        f"üìÜ –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –≤—ã–π—Ç–∏: {context.user_data.get('ready')}"
    )

    await update.message.reply_text(
        "‚úÖ –°–ø–∞—Å–∏–±–æ, –∞–Ω–∫–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!

"
        "–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 1‚Äì2 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.
"
        "–ê –ø–æ–∫–∞ ‚Äî –ø–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, —Ñ–æ—Ç–æ —Å–≤–æ–∏—Ö –ª—É—á—à–∏—Ö —Ä–∞–±–æ—Ç –∏ –±—É–¥—å—Ç–µ –Ω–∞ —Å–≤—è–∑–∏.

"
        "üü¢ –õ—É—á—à–∏–µ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ–ø–∞–¥–∞—é—Ç –≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π —Å–ø–∏—Å–æ–∫ ‚Äî –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏ —Å–≤–æ–π —à–∞–Ω—Å üòâ"
    )

    await context.bot.send_message(chat_id=admin_chat_id, text=f"üì• –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ –ø–ª–∏—Ç–æ—á–Ω–∏–∫–∞:

{user_info}")
    return ConversationHandler.END

TOKEN = os.getenv("TELEGRAM_TOKEN")
app = ApplicationBuilder().token(TOKEN).build()

conv_handler = ConversationHandler(
    entry_points=[
        CommandHandler("start", start),
        MessageHandler(filters.Regex("üöÄ –ü–æ–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É"), begin_form),
    ],
    states={
        NAME: [MessageHandler(filters.Regex("üöÄ –ü–æ–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É"), begin_form)],
        PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_name)],
        EXPERIENCE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_phone)],
        TOOL: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_experience)],
        CAR: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_tool)],
        CITIZEN: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_car)],
        HABITS: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_citizen)],
        PHOTO: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_habits)],
        READY: [MessageHandler(filters.PHOTO | (filters.TEXT & ~filters.COMMAND), final_step)],
    },
    fallbacks=[],
)

app.add_handler(conv_handler)
app.add_handler(MessageHandler(filters.ALL & ~filters.COMMAND, start))

app.run_polling()
